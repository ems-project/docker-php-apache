FROM php:7.4-fpm-alpine3.11

ARG VERSION_ARG=""
ARG RELEASE_ARG=""
ARG BUILD_DATE_ARG=""
ARG VCS_REF_ARG=""
ARG GITHUB_TOKEN_ARG=""
ARG ELASTICMS_WEBTECH_VERSION_ARG=""
ARG AWS_CLI_VERSION_ARG=""

LABEL be.smals.webtech.ems.build-date=$BUILD_DATE_ARG \
      be.smals.webtech.ems.name="ElastiCMS in one Docker container" \
      be.smals.webtech.ems.description="A minimal CMS to manage generic content in order to publish it in several Elasticsearch index." \
      be.smals.webtech.ems.url="https://github.com/Smals-Webtech/elasticms" \
      be.smals.webtech.ems.vcs-ref=$VCS_REF_ARG \
      be.smals.webtech.ems.vcs-url="https://github.com/Smals-Webtech/elasticms-docker" \
      be.smals.webtech.ems.vendor="sebastian.molle@gmail.com" \
      be.smals.webtech.ems.version="$VERSION_ARG" \
      be.smals.webtech.ems.release="$RELEASE_ARG" \
      be.smals.webtech.ems.schema-version="1.0" \
      be.smals.webtech.ems.component="admin" \
      be.smals.webtech.ems.docker-image="all-in-one"

USER root

ENV ELASTICMS_VERSION=${VERSION_ARG} \
    ELASTICMS_DOWNLOAD_URL="https://api.github.com/repos/smals-webtech/elasticms/tarball" \
    AWS_CLI_VERSION=${AWS_CLI_VERSION_ARG} \
    AWS_CLI_DOWNLOAD_URL="https://github.com/aws/aws-cli/archive" \
    COMPOSER_INSTALLER_SHA384SUM="" \
    MAIL_SMTP_SERVER="" \
    MAIL_FROM_DOMAIN="" \
    PHP_FPM_MAX_CHILDREN=${PHP_FPM_MAX_CHILDREN:-5} \
    PHP_FPM_REQUEST_MAX_MEMORY_IN_MEGABYTES=${PHP_FPM_REQUEST_MAX_MEMORY_IN_MEGABYTES:-128} \
    CONTAINER_HEAP_PERCENT=${CONTAINER_HEAP_PERCENT:-0.80} \
    HOME=/home/default \
    PATH=/opt/bin:/usr/local/bin:/usr/bin:$PATH

WORKDIR /opt/src

COPY etc/php/ /usr/local/etc/
COPY etc/apache2/ /etc/apache2/
COPY etc/supervisor/ /etc/supervisor/
COPY bin/ /usr/local/bin/

RUN mkdir -p /home/default /opt/etc /opt/bin /opt/src \
    && chmod +x /usr/local/bin/apk-list \
                /usr/local/bin/container-entrypoint \
                /usr/local/bin/wait-for-it \
    && echo "Install and Configure ElastiCMS required extra PHP packages ..." \
    && apk add --no-cache --virtual .build-deps $PHPIZE_DEPS autoconf freetype-dev icu-dev libjpeg-turbo-dev libpng-dev libzip-dev openldap-dev \
                                                pcre-dev gnupg git bzip2-dev musl-libintl postgresql-dev libxml2-dev \
    && docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install -j "$(nproc)" soap iconv bz2 fileinfo gettext intl pcntl pgsql pdo_pgsql simplexml ldap gd ldap mysqli pdo_mysql zip opcache \
    && pecl install APCu-5.1.17 \
    && pecl install redis-4.3.0 \
    && docker-php-ext-enable apcu redis \
    && runDeps="$( \
       scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions \
       | tr ',' '\n' \
       | sort -u \
       | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' \
       )" \
    && apk add --virtual .ems-phpext-rundeps $runDeps \
    && apk add --virtual .ems-rundeps apache2 apache2-utils apache2-proxy apache2-ssl curl tzdata \
                                      bash tar gettext ssmtp postgresql-client postgresql-libs python3 \
                                      mailx coreutils mysql-client jq wget supervisor icu-libs libxml2 \
    && touch /var/log/supervisord.log \
    && touch /var/run/supervisord.pid \
    && mkdir -p /var/run/php-fpm /run/apache2 /var/run/apache2 /var/log/apache2 \
    && echo "Setup timezone ..." \
    && cp /usr/share/zoneinfo/Europe/Brussels /etc/localtime \
    && echo "Europe/Brussels" > /etc/timezone \
    && echo "Add non-privileged user ..." \
    && adduser -D -u 1001 -g default -s /sbin/nologin default \
    && echo "Configure OpCache ..." \
    && echo 'opcache.memory_consumption=128' > /usr/local/etc/php/conf.d/opcache-recommended.ini \
    && echo 'opcache.interned_strings_buffer=8' >> /usr/local/etc/php/conf.d/opcache-recommended.ini \
    && echo 'opcache.max_accelerated_files=4000' >> /usr/local/etc/php/conf.d/opcache-recommended.ini \
    && echo 'opcache.revalidate_freq=2' >> /usr/local/etc/php/conf.d/opcache-recommended.ini \
    && echo 'opcache.fast_shutdown=1' >> /usr/local/etc/php/conf.d/opcache-recommended.ini \
    && echo "Download and install Composer ..." \
    && curl -sSfLk https://getcomposer.org/installer -o /tmp/composer-setup.php \
    && curl -sSfLk https://composer.github.io/installer.sig -o /tmp/composer-setup.sig \
    && COMPOSER_INSTALLER_SHA384SUM=$(cat /tmp/composer-setup.sig) \
    && echo "$COMPOSER_INSTALLER_SHA384SUM /tmp/composer-setup.php" | sha384sum -c \
    && php /tmp/composer-setup.php --disable-tls --install-dir=/usr/local/bin \
    && rm /tmp/composer-setup.php /tmp/composer-setup.sig \
    && ln -s /usr/local/bin/composer.phar /usr/local/bin/composer \
    && chmod +x /usr/local/bin/composer.phar /usr/local/bin/composer \
    && mkdir /home/default/.composer \
    && echo "Download and install aws-cli ..." \
    && mkdir -p /tmp/aws-cli \
    && curl -sSfLk ${AWS_CLI_DOWNLOAD_URL}/${AWS_CLI_VERSION}.tar.gz | tar -xzC /tmp/aws-cli --strip-components=1 \
    && cd /tmp/aws-cli \
    && python3 setup.py install \
    && cd /opt && rm -Rf /tmp/aws-cli 

USER 1001

ENTRYPOINT ["container-entrypoint"]

HEALTHCHECK --start-period=10s --interval=1m --timeout=5s --retries=5 \
        CMD curl --fail --header "Host: localhost" http://localhost:9000/phpinfo.php || exit 1

CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]